<?xml version="1.0" encoding="utf-8"?>

<package schemaVersion="1.4.9" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>ARM</vendor>
  <name>CMSIS-Driver_Validation</name>
  <description>CMSIS-Driver Validation</description>
  <url>http://www.keil.com/pack</url>
  <supportContact>http://silver.arm.com/support</supportContact>
  <license>LICENSE.txt</license>
  
  <releases>
    <release version="1.2.0" date="2019-02-21">
      migrated repository to github.com/arm-software/CMSIS-Driver_Validation repository.
      - Added CMSIS-RTOS2 and Arm Compiler 6 compatibility.
      - Updated CAN test (corrected test for SetBitrate function, added bitrate set for Loopback tests)
      - Minor update to documentation
      - Updated closeDebug function in DV_Framework.c, specified as noinline so higher optimization will keep it also.
    </release>
    <release version="1.1.0" date="2016-04-25">
      - Added USB Host test cases
      - Added CAN test cases
      - Added Ethernet Precision Time Protocol test cases
      - Updated configuration file DV_Config.h to support new features
    </release>
    <release version="1.0.0" date="2015-10-09">
      Initial public release of the CMSIS-Driver Validation Suite
    </release>
  </releases>

  <keywords>
    <keyword>ARM</keyword>
    <keyword>CMSIS-Driver</keyword>
    <keyword>Driver validation</keyword>
  </keywords>

  
  <examples>
 
    <example name="CMSIS-Driver Validation" doc="Abstract.txt" folder="Boards/Keil/MCBSTM32F400/CMSIS_DV_API">
      <description>CMSIS-Driver Validation API Example</description>
      <board name="MCBSTM32F400" vendor="Keil"/>
      <project>
        <environment name="uv" load="CMSIS_DV_API.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <component Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
      </attributes>
    </example>
    
    <example name="CMSIS-Driver Validation" doc="Abstract.txt" folder="Boards/Keil/MCBSTM32F200/CMSIS_DV_API">
      <description>CMSIS-Driver Validation API Example</description>
      <board name="MCBSTM32F200" vendor="Keil"/>
      <project>
        <environment name="uv" load="CMSIS_DV_API.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <component Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
      </attributes>
    </example>

    <example name="CMSIS-Driver Validation" doc="Abstract.txt" folder="Boards/ST/STM32F746G-Discovery/CMSIS_DV_API">
      <description>CMSIS-Driver Validation API Example</description>
      <board name="STM32F746G-Discovery" vendor="STMicroelectronics"/>
      <project>
        <environment name="uv" load="CMSIS_DV_API.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <component Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
      </attributes>
    </example>
    
    <example name="CMSIS-Driver Validation" doc="Abstract.txt" folder="Boards/Atmel/SAMV71-XULTRA/CMSIS_DV_API">
      <description>CMSIS-Driver Validation API Example</description>
      <board name="SAMV71-XULTRA" vendor="Atmel"/>
      <project>
        <environment name="uv" load="CMSIS_DV_API.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <component Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
      </attributes>
    </example>
    
    <example name="CMSIS-Driver Validation" doc="Abstract.txt" folder="Boards/Infineon/XMC4500 Relax Lite Kit/CMSIS_DV_API">
      <description>CMSIS-Driver Validation API Example</description>
      <board name="XMC4500 Relax Lite Kit" vendor="Infineon"/>
      <project>
        <environment name="uv" load="CMSIS_DV_API.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <component Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
      </attributes>
    </example>
  
  </examples>

  
  <conditions>
  
    <condition id="Cortex-M Device">
      <description>Cortex-M processor based device: one of CM3, CM4, CM7 </description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="Cortex-M4"/>
      <accept Dcore="Cortex-M7"/>
    </condition>
  
    <condition id="CMSIS Core with RTOS and STDOUT">
      <description>CMSIS Core with RTOS for Cortex-M processor</description>
      <accept condition="Cortex-M Device"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
      <require Cclass="CMSIS" Cgroup="RTOS2"/>
      <require Cclass="Compiler" Cgroup="I/O" Csub="STDOUT"/>
    </condition>

    <condition id="CMSIS Driver Validation API SPI">
      <description>CMSIS Driver SPI</description>
      <require condition="CMSIS Core with RTOS and STDOUT"/>
      <require Cclass="CMSIS Driver" Cgroup="SPI"/>
      <require Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
    </condition>
  
    <condition id="CMSIS Driver Validation API I2C">
      <description>CMSIS Driver I2C</description>
      <require condition="CMSIS Core with RTOS and STDOUT"/>
      <require Cclass="CMSIS Driver" Cgroup="I2C"/>
      <require Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
    </condition>

    <condition id="CMSIS Driver Validation API ETH">
      <description>CMSIS Driver Ethernet</description>
      <require condition="CMSIS Core with RTOS and STDOUT"/>
      <accept Cclass="CMSIS Driver" Cgroup="Ethernet"/>
      <accept Cclass="CMSIS Driver" Cgroup="Ethernet MAC"/>
      <require Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
    </condition>

    <condition id="CMSIS Driver Validation API USART">
      <description>CMSIS Driver USART</description>
      <require condition="CMSIS Core with RTOS and STDOUT"/>
      <require Cclass="CMSIS Driver" Cgroup="USART"/>
      <require Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
    </condition>
  
    <condition id="CMSIS Driver Validation API MCI">
      <description>CMSIS Driver MCI</description>
      <require condition="CMSIS Core with RTOS and STDOUT"/>
      <require Cclass="CMSIS Driver" Cgroup="MCI"/>
      <require Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
    </condition>
  
    <condition id="CMSIS Driver Validation API USBD">
      <description>CMSIS Driver USB Device</description>
      <require condition="CMSIS Core with RTOS and STDOUT"/>
      <require Cclass="CMSIS Driver" Cgroup="USB Device"/>
      <require Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
    </condition>
    
    <condition id="CMSIS Driver Validation API USBH">
      <description>CMSIS Driver USB Host</description>
      <require condition="CMSIS Core with RTOS and STDOUT"/>
      <require Cclass="CMSIS Driver" Cgroup="USB Host"/>
      <require Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
    </condition>

    <condition id="CMSIS Driver Validation API CAN">
      <description>CMSIS Driver CAN</description>
      <require condition="CMSIS Core with RTOS and STDOUT"/>
      <require Cclass="CMSIS Driver" Cgroup="CAN"/>
      <require Cbundle="API" Cclass="CMSIS Driver Validation" Cgroup="Framework"/>
    </condition>
  
  </conditions>  

  <components>  
     
    <bundle Cbundle="API" Cclass="CMSIS Driver Validation" Cversion="1.0.0">  
      <description>Run API test for enabled drivers</description>
      <doc>Documentation/html/index.html</doc>
      <component Cgroup="Framework" condition="CMSIS Core with RTOS and STDOUT">
      <description>Test framework</description>
      <files>
        <file category="doc"     name="Documentation/html/index.html" />
        <file category="include" name="Include/"/>
        <file category="header"  name="Source/Config/DV_Config.h" attr="config" version = "1.1.0"/>
        <file category="source"  name="Source/cmsis_dv.c"/>
        <file category="header"  name="Include/cmsis_dv.h"/>
        <file category="source"  name="Source/DV_Framework.c"/>
        <file category="source"  name="Source/DV_Report.c"/>
      </files>
    </component>
    
    <component Cgroup="SPI" condition="CMSIS Driver Validation API SPI">        
      <description>SPI driver API test</description>
      <RTE_Components_h>
        #define RTE_DV_API_SPI                      /* Driver Validation API SPI enabled */
      </RTE_Components_h>
      <files>
        <file category="doc" name="Documentation/html/group__spi__funcs.html" />
        <file category="source" name="Source/DV_SPI.c"/>
      </files>
    </component>
    
    <component Cgroup="I2C" condition="CMSIS Driver Validation API I2C">  
      <description>I2C driver API test</description>
      <RTE_Components_h>
        #define RTE_DV_API_I2C                      /* Driver Validation API I2C enabled */
      </RTE_Components_h>
      <files>
        <file category="doc" name="Documentation/html/group__i2c__funcs.html" />
        <file category="source" name="Source/DV_I2C.c"/>
      </files>
    </component>
    
    <component Cgroup="USART" condition="CMSIS Driver Validation API USART">  
      <description>USART driver API test</description>
      <RTE_Components_h>
        #define RTE_DV_API_USART                    /* Driver Validation API USART enabled */
      </RTE_Components_h>
      <files>
        <file category="doc" name="Documentation/html/group__usart__funcs.html" />
        <file category="source" name="Source/DV_USART.c"/>
      </files>
    </component>
    
    <component Cgroup="Ethernet" condition="CMSIS Driver Validation API ETH">
      <description>Ethernet driver API test</description>
      <RTE_Components_h>
        #define RTE_DV_API_ETH                      /* Driver Validation API Ethernet enabled */
      </RTE_Components_h>
      <files>
        <file category="doc" name="Documentation/html/group__eth__funcs.html" />
        <file category="source" name="Source/DV_ETH.c"/>
      </files>
    </component>
    
    <component Cgroup="MCI" condition="CMSIS Driver Validation API MCI">
      <description>MCI driver API test</description>
      <RTE_Components_h>
        #define RTE_DV_API_MCI                     /* Driver Validation API MCI enabled */
      </RTE_Components_h>
      <files>
        <file category="doc" name="Documentation/html/group__mci__funcs.html" />
        <file category="source" name="Source/DV_MCI.c"/>
      </files>
    </component>
    
    <component Cgroup="USB Device" condition="CMSIS Driver Validation API USBD">
      <description>USB Device driver API test</description>
      <RTE_Components_h>
        #define RTE_DV_API_USBD                     /* Driver Validation API USB Device enabled */
      </RTE_Components_h>
      <files>
        <file category="doc" name="Documentation/html/group__usbd__funcs.html" />
        <file category="source" name="Source/DV_USBD.c"/>
      </files>
    </component>

    <component Cgroup="USB Host" condition="CMSIS Driver Validation API USBH">
      <description>USB Host driver API test</description>
      <RTE_Components_h>
        #define RTE_DV_API_USBH                     /* Driver Validation API USB Host enabled */
      </RTE_Components_h>
      <files>
        <file category="doc" name="Documentation/html/group__usbh__funcs.html" />
        <file category="source" name="Source/DV_USBH.c"/>
      </files>
    </component>
    
    <component Cgroup="CAN" condition="CMSIS Driver Validation API CAN">
      <description>CAN driver API test</description>
      <RTE_Components_h>
        #define RTE_DV_API_CAN                     /* Driver Validation API CAN enabled */
      </RTE_Components_h>
      <files>
        <file category="doc" name="Documentation/html/group__can__funcs.html" />
        <file category="source" name="Source/DV_CAN.c"/>
      </files>
    </component>
    
  </bundle>

<!-- Future Work
  <bundle Cbundle="Board Master" Cclass="CMSIS Driver Validation" Cversion="1.0.0">  
    <description>Configure master board for extended driver validation (TBI)</description>
    <doc></doc>

    <component Cgroup="Framework">  
      <description></description>
      <files>
        <file category="source" name="Source/Config/Dummy.c" attr="config" version="0.0.1"/>
      </files>
    </component>
  </bundle>
  
  <bundle Cbundle="Board Slave" Cclass="CMSIS Driver Validation" Cversion="1.0.0">  
    <description>Configure slave board for extended driver validation (TBI)</description>
    <doc></doc>

    <component Cgroup="Framework">  
      <description></description>
      <files>
        <file category="source" name="Source/Config/Dummy.c" attr="config" version="0.0.1"/>
      </files>
      </component>
    </bundle>
-->
    
  </components> <!-- end of components sections -->
</package>
